;/*****************************************************
;This program was produced by the
;CodeWizardAVR V2.05.3 Standard
;Automatic Program Generator
;© Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 16.11.2018
;Author  : Dima
;Company : Dima
;Comments:
;
;
;Chip type               : ATtiny261
;AVR Core Clock frequency: 8,000000 MHz
;Memory model            : Tiny
;External RAM size       : 0
;Data Stack size         : 32
;*****************************************************/
;
;#include <tiny261.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x20
;PCODE: $00000003 VOL: 0
	.EQU __sm_adc_noise_red=0x08
;PCODE: $00000004 VOL: 0
	.EQU __sm_mask=0x18
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x10
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x18
;PCODE: $00000007 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $00000008 VOL: 0
	#endif
;PCODE: $00000009 VOL: 0
;PCODE: $0000000A VOL: 0
;
;#include <delay.h>
;unsigned int comand;
;unsigned int adc_data;
;#define ADC_VREF_TYPE 0x00
;
;// ADC interrupt service routine
;interrupt [ADC_INT] void adc_isr(void)
; 0000 0020 {

	.CSEG
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
; 0000 0021 // Read the AD conversion result
; 0000 0022 adc_data=ADCW;
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 0023 }
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;
;// Read the AD conversion result
;// with noise canceling
;unsigned int read_adc(unsigned char adc_input)
; 0000 0028 {
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
; 0000 0029 ADMUX=adc_input | (ADC_VREF_TYPE & 0xff);
;PCODE: $00000014 VOL: 0
;	adc_input -> Y+0
;PCODE: $00000015 VOL: 0
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 002A // Delay needed for the stabilization of the ADC input voltage
; 0000 002B delay_us(10);
;PCODE: $00000018 VOL: 0
; 0000 002C #asm
;PCODE: $00000019 VOL: 0
; 0000 002D     in   r30,mcucr
    in   r30,mcucr
;PCODE: $0000001A VOL: 0
; 0000 002E     cbr  r30,__sm_mask
    cbr  r30,__sm_mask
;PCODE: $0000001B VOL: 0
; 0000 002F     sbr  r30,__se_bit | __sm_adc_noise_red
    sbr  r30,__se_bit | __sm_adc_noise_red
;PCODE: $0000001C VOL: 0
; 0000 0030     out  mcucr,r30
    out  mcucr,r30
;PCODE: $0000001D VOL: 0
; 0000 0031     sleep
    sleep
;PCODE: $0000001E VOL: 0
; 0000 0032     cbr  r30,__se_bit
    cbr  r30,__se_bit
;PCODE: $0000001F VOL: 0
; 0000 0033     out  mcucr,r30
    out  mcucr,r30
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
; 0000 0034 #endasm
; 0000 0035 return adc_data;
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 0036 }
;PCODE: $00000025 VOL: 0
;
;// Declare your global variables here
;
;void main(void)
; 0000 003B {
;PCODE: $00000026 VOL: 0
; 0000 003C // Declare your local variables here
; 0000 003D 
; 0000 003E // Crystal Oscillator division factor: 1
; 0000 003F #pragma optsize-
; 0000 0040 CLKPR=0x80;
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
; 0000 0041 CLKPR=0x00;
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
; 0000 0042 #ifdef _OPTIMIZE_SIZE_
; 0000 0043 #pragma optsize+
; 0000 0044 #endif
; 0000 0045 
; 0000 0046 // Input/Output Ports initialization
; 0000 0047 // Port A initialization
; 0000 0048 // Func7=In Func6=Out Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
; 0000 0049 // State7=T State6=0 State5=0 State4=0 State3=0 State2=T State1=T State0=T
; 0000 004A PORTA=0x00;
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
; 0000 004B DDRA=0x78;
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
; 0000 004C 
; 0000 004D // Port B initialization
; 0000 004E // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
; 0000 004F // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
; 0000 0050 PORTB=0x00;
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
; 0000 0051 DDRB=0x00;
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
; 0000 0052 
; 0000 0053 // Timer/Counter 0 initialization
; 0000 0054 // Clock source: System Clock
; 0000 0055 // Clock value: Timer 0 Stopped
; 0000 0056 // Mode: 8bit top=0xFF
; 0000 0057 TCCR0A=0x00;
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0058 TCCR0B=0x00;
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
; 0000 0059 TCNT0H=0x00;
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
; 0000 005A TCNT0L=0x00;
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
; 0000 005B OCR0A=0x00;
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
; 0000 005C OCR0B=0x00;
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
; 0000 005D 
; 0000 005E // Timer/Counter 1 initialization
; 0000 005F // Clock source: System Clock
; 0000 0060 // Clock value: Timer1 Stopped
; 0000 0061 // Mode: Normal top=OCR1C
; 0000 0062 // OC1A output: Discon.
; 0000 0063 // OC1B output: Discon.
; 0000 0064 // OC1C output: Discon.
; 0000 0065 // Fault Protection Mode: Off
; 0000 0066 // Fault Protection Noise Canceler: Off
; 0000 0067 // Fault Protection triggered on Falling edge
; 0000 0068 // Fault Protection triggered by the Analog Comparator: Off
; 0000 0069 // Dead Time Rising Edge: 0.000 us
; 0000 006A // Dead Time Falling Edge: 0.000 us
; 0000 006B // Timer1 Overflow Interrupt: Off
; 0000 006C // Compare A Match Interrupt: Off
; 0000 006D // Compare B Match Interrupt: Off
; 0000 006E // Compare D Match Interrupt: Off
; 0000 006F // Fault Protection Interrupt: Off
; 0000 0070 PLLCSR=0x00;
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
; 0000 0071 
; 0000 0072 TCCR1A=0x00;
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0073 TCCR1B=0x00;
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 0074 TCCR1C=0x00;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0075 TCCR1D=0x00;
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0076 TCCR1E=0x00;
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0077 TC1H=0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0078 TCNT1=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0079 TC1H=0x00;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 007A OCR1A=0x00;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 007B TC1H=0x00;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
; 0000 007C OCR1B=0x00;
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 007D TC1H=0x00;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
; 0000 007E OCR1C=0x00;
;PCODE: $00000059 VOL: 0
;PCODE: $0000005A VOL: 0
; 0000 007F TC1H=0x00;
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
; 0000 0080 OCR1D=0x00;
;PCODE: $0000005D VOL: 0
;PCODE: $0000005E VOL: 0
; 0000 0081 DT1=0x00;
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 0082 
; 0000 0083 // External Interrupt(s) initialization
; 0000 0084 // INT0: Off
; 0000 0085 // INT1: Off
; 0000 0086 // Interrupt on any change on pins PCINT0-7, 12-15: Off
; 0000 0087 // Interrupt on any change on pins PCINT8-11: Off
; 0000 0088 MCUCR=0x00;
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 0089 GIMSK=0x00;
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
; 0000 008A 
; 0000 008B // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 008C TIMSK=0x00;
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
; 0000 008D 
; 0000 008E // Universal Serial Interface initialization
; 0000 008F // Mode: Disabled
; 0000 0090 // Clock source: Register & Counter=no clk.
; 0000 0091 // USI Counter Overflow Interrupt: Off
; 0000 0092 USICR=0x00;
;PCODE: $00000067 VOL: 0
;PCODE: $00000068 VOL: 0
; 0000 0093 
; 0000 0094 // Analog Comparator initialization
; 0000 0095 // Analog Comparator: Off
; 0000 0096 ACSRA=0x80;
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
; 0000 0097 // Hysterezis level: 0 mV
; 0000 0098 ACSRB=0x00;
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
; 0000 0099 DIDR1=0x00;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
; 0000 009A 
; 0000 009B // ADC initialization
; 0000 009C // ADC Clock frequency: 500,000 kHz
; 0000 009D // ADC Voltage Reference: AVCC pin
; 0000 009E // ADC Bipolar Input Mode: Off
; 0000 009F // ADC Auto Trigger Source: ADC Stopped
; 0000 00A0 // Digital input buffers on ADC0: On, ADC1: On, ADC2: On, Aref: On
; 0000 00A1 // ADC3: On, ADC4: On, ADC5: On, ADC6: On
; 0000 00A2 DIDR0=0x00;
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
; 0000 00A3 // Digital input buffers on ADC7: On, ADC8: On, ADC9: On, ADC10: On
; 0000 00A4 DIDR1=0x00;
;PCODE: $00000071 VOL: 0
;PCODE: $00000072 VOL: 0
; 0000 00A5 ADMUX=ADC_VREF_TYPE & 0xff;
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
; 0000 00A6 ADCSRA=0x8C;
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
; 0000 00A7 ADCSRB&=0x7F;
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
; 0000 00A8 ADCSRB|=0x00 | ((ADC_VREF_TYPE & 0x100) >> 4);
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
; 0000 00A9 
; 0000 00AA // Global enable interrupts
; 0000 00AB #asm("sei")
;PCODE: $0000007C VOL: 0
	sei
;PCODE: $0000007D VOL: 0
; 0000 00AC      PORTA.6=0;
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
; 0000 00AD      PORTA.5=0;
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
; 0000 00AE      PORTA.4=0;
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
; 0000 00AF      PORTA.3=0;
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
; 0000 00B0 while (1)
;PCODE: $00000086 VOL: 0
; 0000 00B1       {
; 0000 00B2 
; 0000 00B3      read_adc(0);
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
; 0000 00B4       delay_ms(50);
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
; 0000 00B5 
; 0000 00B6      if ((adc_data>180)&&(adc_data<355))
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
; 0000 00B7       {
; 0000 00B8      comand=1;
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
; 0000 00B9      delay_ms(50);
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;PCODE: $0000009A VOL: 0
; 0000 00BA       };
;PCODE: $0000009B VOL: 0
; 0000 00BB 
; 0000 00BC        if ((adc_data>135)&&(adc_data<200))
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
; 0000 00BD       {
; 0000 00BE      comand=2;
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
; 0000 00BF      delay_ms(50);
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
; 0000 00C0       };
;PCODE: $000000AB VOL: 0
; 0000 00C1 
; 0000 00C2        if ((adc_data>100)&&(adc_data<130))
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
; 0000 00C3       {
; 0000 00C4      comand=3;
;PCODE: $000000B6 VOL: 0
;PCODE: $000000B7 VOL: 0
; 0000 00C5      delay_ms(50);
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
; 0000 00C6       };
;PCODE: $000000BB VOL: 0
; 0000 00C7 
; 0000 00C8        if ((adc_data>60)&&(adc_data<90))
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
; 0000 00C9       {
; 0000 00CA      comand=4;
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
; 0000 00CB      delay_ms(100);
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
; 0000 00CC       };
;PCODE: $000000CB VOL: 0
; 0000 00CD 
; 0000 00CE        switch (comand)
;PCODE: $000000CC VOL: 0
; 0000 00CF       {
; 0000 00D0     case 1:  PORTA.6=1; PORTA.5=0;PORTA.4=0;PORTA.3=0;comand=0;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
; 0000 00D1     break;
;PCODE: $000000D8 VOL: 0
; 0000 00D2     case 2:  PORTA.6=0; PORTA.5=1;PORTA.4=0;PORTA.3=0;comand=0; delay_ms(200);
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 00D3     break;
;PCODE: $000000E8 VOL: 0
; 0000 00D4     case 3:  PORTA.6=0; PORTA.5=0;PORTA.4=1;PORTA.3=0;comand=0; delay_ms(200);
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
; 0000 00D5     break;
;PCODE: $000000F8 VOL: 0
; 0000 00D6     case 4:  PORTA.6=0; PORTA.5=0;PORTA.4=0;PORTA.3=1;comand=0; delay_ms(400);
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
; 0000 00D7     break;
;PCODE: $00000107 VOL: 0
; 0000 00D8 
; 0000 00D9     default:PORTA.6=0; PORTA.5=0;PORTA.4=0;PORTA.3=0;comand=0;
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
; 0000 00DA       };
;PCODE: $00000112 VOL: 0
; 0000 00DB 
; 0000 00DC 
; 0000 00DD 
; 0000 00DE 
; 0000 00DF 
; 0000 00E0       }
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 00E1 }
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
